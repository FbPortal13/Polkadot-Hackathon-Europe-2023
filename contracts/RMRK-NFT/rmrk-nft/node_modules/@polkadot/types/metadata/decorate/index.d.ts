import type { Registry } from '@polkadot/types-codec/types';
import type { DecoratedMeta } from '@polkadot/types/metadata/decorate/types';
import { Metadata } from '@polkadot/types/metadata/Metadata';
import { decorateConstants } from '@polkadot/types/metadata/decorate/constants';
import { decorateErrors } from '@polkadot/types/metadata/decorate/errors';
import { decorateEvents, filterEventsSome } from '@polkadot/types/metadata/decorate/events';
import { decorateExtrinsics, filterCallsSome } from '@polkadot/types/metadata/decorate/extrinsics';
import { decorateStorage } from '@polkadot/types/metadata/decorate/storage';
/**
 * Expands the metadata by decoration into consts, query and tx sections
 */
export declare function expandMetadata(registry: Registry, metadata: Metadata): DecoratedMeta;
export { decorateConstants, decorateErrors, decorateEvents, decorateExtrinsics, decorateStorage, filterCallsSome, filterEventsSome };
