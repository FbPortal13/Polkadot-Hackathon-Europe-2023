"#[doc = \" Trait definitions for Base\"] pub trait Base\n{\n    #[doc = \" Add one or more parts to the base\"] #[ink(message)]\n    #[ink(selector = 2795221911u32)] fn\n    add_part_list(& mut self, parts : Vec < Part >) -> Result < (), PSP34Error\n    > ;\n    #[doc =\n    \" Add collection address(es) that can be used to equip given `PartId`.\"]\n    #[ink(message)] #[ink(selector = 1735076622u32)] fn\n    add_equippable_addresses(& mut self, part_id : PartId, equippable_address\n    : Vec < AccountId >,) -> Result < (), PSP34Error > ;\n    #[doc = \" Remove list of equippable addresses for given Part\"]\n    #[ink(message)] #[ink(selector = 2708938055u32)] fn\n    reset_equippable_addresses(& mut self, part_id : PartId) -> Result < (),\n    PSP34Error > ;\n    #[doc =\n    \" Sets the is_equippable_by_all flag to true, meaning that any collection may be equipped into the `PartId`\"]\n    #[ink(message)] #[ink(selector = 4029545951u32)] fn\n    set_equippable_by_all(& mut self, part_id : PartId) -> Result < (),\n    PSP34Error > ; #[ink(message)] #[ink(selector = 3445304486u32)] fn\n    setup_base(& mut self, base_metadata : String) -> Result < (), PSP34Error\n    > ; #[ink(message)] #[ink(selector = 4014737431u32)] fn\n    get_base_metadata(& self) -> PreludeString ;\n    #[doc = \" Get the list of all parts.\"] #[ink(message)]\n    #[ink(selector = 182916615u32)] fn get_parts_count(& self) -> PartId ;\n    #[doc = \" Get the part details for the given PartId.\"] #[ink(message)]\n    #[ink(selector = 1255889028u32)] fn get_part(& self, part_id : PartId) ->\n    Option < Part > ;\n    #[doc =\n    \" Check whether the given address is allowed to equip the desired `PartId`.\"]\n    #[ink(message)] #[ink(selector = 12148296u32)] fn\n    ensure_equippable(& self, part_id : PartId, target_address : AccountId,)\n    -> Result < (), PSP34Error > ;\n    #[doc = \" Checks if the given `PartId` can be equipped by any collection\"]\n    #[ink(message)] #[ink(selector = 3306893829u32)] fn\n    is_equippable_by_all(& self, part_id : PartId) -> bool ;\n}"